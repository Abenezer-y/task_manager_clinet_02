{"version":3,"sources":["reportWebVitals.js","components/post.jsx","components/ui_components/inputs.jsx","components/newTask.jsx","components/ui_components/tables.jsx","components/workStation.jsx","components/financial_info.jsx","components/navigationBar.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","PostCard","state","postData","props","Card","className","Body","Title","this","id","tag","title","Text","description","Row","Col","posted","deadline","updated","status","Component","PostComponent","fetch","response","json","data","setState","sm","map","posts","Table","striped","bordered","hover","renderOption","value","length","choice","InputRow","type","handleOnChange","htmlFor","name","data-date-format","onChange","rows","Form","Control","as","InputGroup","Prepend","FormControl","aria-label","aria-describedby","placeholder","renderInput","NewTask","group","file_id","cost","travel","engaged","waiting","errors","choices_01","choices_02","handleSubmit","e","a","preventDefault","console","log","axios","post","task","input","currentTarget","onSubmit","Header","tableHeader","header","tableValue","cell","cell_value","TableView","header_values","values","renderTable","WorkStation","task_info","directory","progress","task_id","note","ac_cost","ac_travel_time","ac_waiting_time","ac_engagement_time","updated_on","time_table","table_values","row_inde","col","table_2_values","sec_response","table_01","Button","variant","role","aria-labelledby","aria-expanded","class","Expenses","NavigationComponent","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Divider","inline","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63f3b5ba.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\nimport {Card, Button, Row, Col, Table} from 'react-bootstrap';\n\nclass PostCard extends Component {\n    state = { postData : this.props.postData \n    }\n    render() { \n        return (\n\n        <Card className = \"my-2\">\n            {/* <Card.Header>Task No. {this.state.postData.id} - - {this.state.postData.tag}</Card.Header> */}\n                <Card.Body>\n                    <Card.Title>Task No. {this.state.postData.id} - - {this.state.postData.tag}</Card.Title>\n                    <h4>{this.state.postData.title}</h4>\n                    <Card.Text>\n                    {this.state.postData.description}\n                    </Card.Text>\n                    <Row>\n                        <Col>\n                            <Col><small className=\"text-muted my-5\">Posted on: {this.state.postData.posted}</small></Col>\n                            <Col><small className=\"text-muted my-5\">Deadline: {this.state.postData.deadline}</small></Col>\n                        </Col>\n                        <Col>\n                            <Col><small className=\"text-muted my-5\">Last Modified: {this.state.postData.updated}</small></Col>\n                            <Col><small className=\"text-muted my-5\">Status: {this.state.postData.status}</small></Col>\n                        </Col>\n                    </Row>\n                    \n\n                    \n                </Card.Body>\n                {/* <Button variant=\"primary\">Detail</Button> */}\n        </Card>);\n    }\n}\n \n\nclass PostComponent extends Component {\n    state = { postData : [{id:\"\",\n                           title: \"\",\n                           description: \"\",\n                           updated: \"\",\n                           posted: \"\",\n                           status: \"\",\n                           tag: \"\",\n                           deadline: \"\"}] \n            }\n\n    async componentDidMount() {\n        const response = await fetch('/tasks')\n        const data = await response.json();\n        this.setState({postData: data});\n    }\n    \n    render() { \n        return (\n        <div className=\"container\">\n        <Row>\n        <Col sm={8}>\n        {this.state.postData.map(posts => \n        <PostCard key={posts.id}  \n                  postData = {posts}\n                  />)}\n        </Col>\n        <Col sm={4}>\n        <Table striped bordered hover>\n            <thead>\n                <tr>\n                <th>Description</th>\n                <th>Count</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                <td>Active</td>\n                <td>5</td>\n                </tr>\n                <tr>\n                <td>Urgent</td>\n                <td>0</td>\n                </tr>\n                <tr>\n                <td>Completed</td>\n                <td>0</td>\n                </tr>\n            </tbody>\n            </Table>\n        </Col>\n        </Row>\n        </div>\n          );\n    }\n}\n \nexport default PostComponent;\n","import React from 'react';\nimport { Form, InputGroup, FormControl} from \"react-bootstrap\";\nimport './App.css';\nfunction renderOption(value) {\n    if (value.length === 0) \n        return(<option value=\"\">. . .</option>);\n    \n    return (value.map(choice => \n    <option key={choice.id}  value={choice.value}>{choice.value}</option>));\n}\n\n\nfunction renderInput(type, id, title, value, handleOnChange) {\n    if (type === \"date\") \n        return(\n    <div className=\"form-group\">\n        <label htmlFor={id}>{title}</label>\n        <input type=\"date\"\n                name = {id} \n                id={id} \n                className=\"form-control col-4\" \n                data-date-format=\"mm/dd/yyyy\" \n                value={value} \n                onChange = {handleOnChange}/>\n    </div>);\n\n    else if (type === \"file\") \n    return(\n    <div className=\"form-group\">\n        <input type=\"file\" \n                className=\"custom-file-input\" \n                name = {id} \n                id={id} \n                value={value} \n                onChange = {handleOnChange}/>\n        <label className=\"custom-file-label\" htmlFor={id}>Files</label>\n    </div>);\n\n    else if (type === \"textarea\") \n    return(\n    <div className=\"form-group\">\n        <label htmlFor={id}>{title}</label>\n        <textarea className=\"form-control\" name = {id} id={id} rows=\"3\" \n        value={value} onChange = {handleOnChange}></textarea>\n    </div> ); \n\n    else if (type === \"selection\") \n    return(\n    <div className=\"form-group \">\n        {title}\n        <Form.Control name = {id}  id='id' as=\"select\" className = 'col my-2' onChange = {handleOnChange}>\n        {renderOption(value)}\n        </Form.Control>\n    </div> );               \n     \n     \n     else if (type === \"input_group\") \n     return(\n        <InputGroup className=\"mb-3\">\n        <InputGroup.Prepend>\n          <InputGroup.Text id={id} value={value} name = {id}  onChange = {handleOnChange}>{title}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n            // // eslint-disable-next-line react/style-prop-object\n            // style=\"width: 120px;\"\n        />\n       </InputGroup>);  \n\n     \n    else if (type === \"input_text\") \n    return( \n    <InputGroup>\n        <InputGroup.Prepend>\n            <InputGroup.Text id={id} value={value} name = {id}  onChange = {handleOnChange}>{title}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl as=\"textarea\" />\n        </InputGroup>);\n\n    else if (type === \"input_date\") \n    return( \n    <InputGroup>\n        <InputGroup.Prepend>\n            <InputGroup.Text id={id} value={value} name = {id}  onChange = {handleOnChange}>{title}</InputGroup.Text>\n        </InputGroup.Prepend>\n        <FormControl type=\"date\"/>\n        </InputGroup>);\n\n    return (     \n    <div className=\"form-group\">\n    <label htmlFor={id}>{title}</label>\n    <input type=\"text\" \n            value={value} name = {id} id={id} \n            placeholder={title} onChange = {handleOnChange} \n            className=\"form-control\" />\n    </div>);\n}\n\nconst InputRow = ({type, id, title, value, handleOnChange}) => {\n    return ( renderInput(type, id, title, value, handleOnChange) );\n}\n \nexport default InputRow;\n","import React, { Component } from 'react';\nimport InputRow from './ui_components/inputs';\nimport axios from 'axios';\nimport { Col, Card, Row } from 'react-bootstrap'\n\n\nclass NewTask extends Component {\n    state = {\n        data: {group: \"\", tag: \"\", title: \"\", description: \"\", deadline: \"\", file_id: \"\", \n               cost: \"\", travel: \"\", engaged: \"\", waiting: \"\"},\n        errors: {},\n        choices_01 : [ {id: 1, value: \"Logistics\"}, \n        {id: 2, value: \"Finance\"}, \n        {id: 3, value: \"Office\"}, \n        {id: 4, value: \"KVO\"},\n        {id: 5, value: \"Personal\"},\n        {id: 6, value: \"Others\"} ],\n        choices_02 : [ {id: 1, value: \"Urgent\"}, \n        {id: 2, value: \"High Priority\"}, \n        {id: 3, value: \"Repetitave\"}, \n        {id: 4, value: \"Normal\"} ]\n    };\n    async componentDidMount() {\n        // const {data: tasks} = await axios.get('/books');\n        // this.setState({tasks});\n    };\n    handleSubmit = async(e) => {\n        e.preventDefault();\n        console.log(this.state)\n        const {data: task} = await axios.post('/result', this.state.data);\n        console.log(task)\n    };\n    handleOnChange = ({currentTarget: input}) => {\n        const data = {...this.state.data}\n        data[input.name] = input.value;\n        this.setState({data})\n    };\n    render() { \n        const {data} = this.state;\n        return ( \n        <div className=\"container\">\n        <div className = \"col my-2\"> \n        <h3>New Task Registration Form</h3> \n        <form className=\"col\"  onSubmit={this.handleSubmit}>\n        <Card>\n        <Card.Header>New Task Description</Card.Header>\n            <Card.Body>\n            <div className=\"row\">\n                <Col className=\"col-4\">\n                <InputRow type='selection' id=\"group\" title=\"Group\" value={this.state.choices_01} handleOnChange={this.handleOnChange} />\n                </Col>\n                <div className=\"col-4\"></div>\n                <Col className=\"col-4\">\n                <InputRow type='selection' id=\"tag\" title=\"Tag\" value={this.state.choices_02} handleOnChange={this.handleOnChange} />\n                </Col>\n            </div>\n            <InputRow type='text' id=\"title\" title=\"Title\" value={data.title} handleOnChange={this.handleOnChange} />\n            <InputRow type=\"textarea\" id=\"description\" title=\"Description\" value={data.description} handleOnChange={this.handleOnChange}/>\n            <Col className=\"col-4\"> \n            <InputRow type=\"file\" id=\"file_id\" value={data.file_id} handleOnChange={this.handleOnChange}/>\n            </Col>\n            </Card.Body>\n            </Card>\n            <br></br>\n            <Card> \n                <Card.Header>Estimated Time of Completion and Estimated Cost</Card.Header>\n                <Card.Body>\n                <Row>\n                    <Col><InputRow type=\"text\" id=\"cost\" title=\"Cost\" value={data.cost} handleOnChange={this.handleOnChange}/></Col>\n                    <Col><InputRow type=\"text\" id=\"travel\" title=\"Travel Time\" value={data.travel} handleOnChange={this.handleOnChange}/></Col>\n                    <Col><InputRow type=\"text\" id=\"engaged\" title=\"Engagement Period\" value={data.engaged} handleOnChange={this.handleOnChange}/></Col>\n                    <Col><InputRow type=\"text\" id=\"waiting\" title=\"Waiting Period\" value={data.waiting} handleOnChange={this.handleOnChange}/></Col>\n                </Row>    \n                <InputRow type=\"date\" id=\"deadline\" title=\"Deadline\" value={data.deadline} handleOnChange={this.handleOnChange}/>\n                </Card.Body>\n            </Card>\n            <br></br>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n        </div>);\n    };\n}\n \nexport default NewTask;","import React from 'react';\nimport { Table } from \"react-bootstrap\";\n\nfunction tableHeader(value) {\n    \n    if (value.length === 0) \n        return(\n            <th value=\"\"></th>\n        );\n        return (value.map(header => \n            <th key={header.id}  value={header.header}>{header.header}</th>\n    ));\n}\n\nfunction tableValue(value) {\n    if (value.length === 0) \n        return(\n            <td>\"Null Table\"</td>\n        );\n    return (value.map(cell => \n            <td key={cell.id}  value={cell.cell_value}>{cell.cell_value}</td>\n    ));\n}\n\nfunction renderTable(header_values, value) {\n   \n    return(\n    <Table>\n    <thead>\n        <tr>\n            {tableHeader(header_values)}\n        </tr>\n    </thead>\n    <tbody>\n        {value.map(cell =>     \n        <tr>\n        {tableValue(cell.values)}\n        </tr>)}\n    </tbody>\n    </Table>);\n}\n\nconst TableView = ({header_values, value}) => {\n    return ( renderTable(header_values, value) );\n}\n \nexport default TableView;\n\n\n","import React, { Component } from 'react';\nimport { Row,Col,Button, Card } from 'react-bootstrap'\nimport InputRow from './ui_components/inputs';\nimport TableView from './ui_components/tables';\nimport axios from 'axios';\n\nclass WorkStation extends Component {\n    state = { task_info : { id:\"\",\n                            title: \"\",\n                            description: \"\",\n                            directory: \"\",\n                            deadline: \"\",\n                            group: \"\",\n                            tag: \"\",\n                            updated: \"\",\n                            posted: \"\",\n                            status: \"\"},\n\n              progress : {  id:\"\",\n                            task_id: \"\",\n                            note: \"\",\n                            ac_cost: \"\",\n                            ac_travel_time: \"\",\n                            ac_waiting_time: \"\",\n                            ac_engagement_time: \"\",\n                            updated_on: \"\",\n                            status: \"\"},\n\n              time_table : [{id: 0, header: \"\"}, \n                            {id: 1,header: \"Estimated\"}, \n                            {id: 2, header: \"Actual\"}], \n\n             table_values: [{row_inde: 0, values: [{col: '00', cell_value: \"Engagment\"}, {col: '01', cell_value: \"1\"}, {col: '02', cell_value: \"\"}]}, \n                            {row_inde: 1, values: [{col: '10', cell_value: \"Drive\"}, {col: '11', cell_value: \"\"}, {col: '12', cell_value: \"\"}]}, \n                            {row_inde: 2, values: [{col: '20', cell_value: \"Waiting Period\"}, {col: '21', cell_value: \"4\"}, {col: '22', cell_value: \"55\"}]}],\n\n             table_2_values: [{row_inde: 0, values: [{col: 0, cell_value: \"Cost\"}, {col: 1, cell_value: \"0\"}, {col: 2, cell_value: \"\"}]}]\n            }\n\n    async componentDidMount() {\n    const response = await fetch('/tasks/1')\n    const sec_response = await fetch('/tasks/table/1')\n    const data = await response.json();\n    this.setState({task_info: data[0]})\n    const table_01 = await sec_response.json();\n    console.log(table_01)\n    this.setState({table_values: table_01})\n    }\n\n    handleOnChange = ({currentTarget: input}) => {\n        const data = {...this.state.progress}\n        data[input.name] = input.value;\n        this.setState({progress: data})\n    };\n    handleSubmit = async(e) => {\n        e.preventDefault();\n        // console.log(this.state)\n        // const {data: task} = await axios.post('/result', this.state.data);\n        // console.log(task)\n    };\n    render() { \n        return (     \n        <div className = \"col my-2\">\n        <h3>Work Area</h3> \n        <Card>\n            <Card.Header> \n                <Row>\n                    <Col className=\"my-2\"> Task No. {this.state.task_info.id} - - {this.state.task_info.tag}</Col>\n                    <Button variant=\"primary\" className=\"float-right\">Modify Task Definition</Button>\n                </Row> \n            </Card.Header>\n            <Card.Body>\n                <Card.Title>{this.state.task_info.title}</Card.Title> \n                    {this.state.task_info.group}  \n                    <Col className=\"my-2\">    \n                        <Card.Text>\n                            {this.state.task_info.description}\n                        </Card.Text>\n                    </Col>\n                    Deadline: {this.state.task_info.deadline}\n            </Card.Body>\n        </Card>\n\n        <Row className=\"row my-2\">\n            <Col className=\"col-4\">\n                <Card>\n                    <Card.Header>Procedure</Card.Header>\n                    <Card.Body>\n                        <Card.Title>Time Management</Card.Title>\n                        <Col>\n                        <TableView header_values={this.state.time_table} value={this.state.table_values}></TableView>\n                        </Col>\n                        <Card.Title>Expense Management</Card.Title>\n                        <Col>\n                        <TableView header_values={this.state.time_table} value={this.state.table_2_values}></TableView>\n                        </Col>\n                        <Card.Title>File Management</Card.Title> \n                        <Col>\n                        <InputRow type=\"file\" id=\"file_id\" value=\"\" handleOnChange={this.handleOnChange}/>\n                        </Col>\n                        <h3 id=\"tree_label\"> File Viewer </h3>\n                            <ul role=\"tree\" aria-labelledby=\"tree_label\">\n                            <li role=\"treeitem\" aria-expanded=\"false\">\n                                <span> Files </span>\n                                <ul role=\"group\">\n                                <li role=\"treeitem\" class=\"doc\"> project-1.docx </li>\n                                <li role=\"treeitem\" class=\"doc\"> project-2.docx </li>\n                                </ul>\n                            </li>\n                            <li role=\"treeitem\" aria-expanded=\"false\">\n                                <span> Letters </span>\n                                <ul role=\"group\">\n                                <li role=\"treeitem\" aria-expanded=\"false\">\n                                    <span> letter-1 </span>\n                                    <ul>\n                                    <li role=\"treeitem\" class=\"doc\"> letter-1A.docx </li>\n                                    <li role=\"treeitem\" class=\"doc\"> letter-1B.docx </li>\n                                    <li role=\"treeitem\" class=\"doc\"> letter-1C.docx </li>\n                                    </ul>\n                                </li>\n                                <li role=\"treeitem\" aria-expanded=\"false\">\n                            </li>\n                            </ul>\n                            </li>\n                            </ul>\n                    </Card.Body>\n                </Card>\n            </Col>\n            <Col className=\"col-8\">\n            <form onSubmit={this.handleSubmit}>\n                <Card>\n                    <Card.Header>Progress Update <Button type=\"submit\" className=\"float-right\">Commit Change</Button></Card.Header>\n                    <Card.Body>\n                    <InputRow type=\"textarea\" id=\"note\" title=\"Notes\" value={this.state.progress.note} handleOnChange={this.handleOnChange}/>\n                    <Row>\n                        <Col><InputRow type=\"text\" id=\"ac_cost\" title=\"Cost\" value={this.state.progress.ac_cost} handleOnChange={this.handleOnChange}/></Col>\n                        <Col><InputRow type=\"text\" id=\"ac_travel_time\" title=\"Drive Time\" value={this.state.progress.ac_travel_time} handleOnChange={this.handleOnChange}/></Col>\n                        <Col><InputRow type=\"text\" id=\"ac_engagement_time\" title=\"Engagment Period\" value={this.state.progress.ac_engagement_time} handleOnChange={this.handleOnChange}/></Col>\n                        <Col><InputRow type=\"text\" id=\"ac_waiting_time\" title=\"Waiting Period\" value={this.state.progress.ac_waiting_time} handleOnChange={this.handleOnChange}/></Col>\n                    </Row>\n                    </Card.Body>\n                </Card>\n                <br></br>\n                <Card>\n                    <Card.Body>\n                        <Card.Title>Note 01</Card.Title>  \n                            <Col className=\"my-2\">    \n                                <Card.Text>\n                                    {this.state.task_info.description}\n                                </Card.Text>\n                            </Col>\n                            Updated on: {this.state.task_info.deadline}\n                    </Card.Body>\n                </Card>\n            </form>\n            </Col>\n        </Row>\n\n        </div> );\n    }\n}\n \nexport default WorkStation;","import React, {Component} from 'react';\nimport { Col, Card, Row } from 'react-bootstrap'\nimport InputRow from './ui_components/inputs';\nimport axios from 'axios';\n\nclass Expenses extends Component {\n    state = { \n        data: {group: \"\", tag: \"\", title: \"\", description: \"\", deadline: \"\", file_id: \"\", \n               cost: \"\", travel: \"\", engaged: \"\", waiting: \"\"},\n        choices_01 : [ {id: 1, value: \"Logistics\"}, \n        {id: 2, value: \"Finance\"}, \n        {id: 3, value: \"Office\"}, \n        {id: 4, value: \"KVO\"},\n        {id: 5, value: \"Personal\"},\n        {id: 6, value: \"Others\"} ],\n        choices_02 : [ {id: 1, value: \"Urgent\"}, \n        {id: 2, value: \"High Priority\"}, \n        {id: 3, value: \"Repetitave\"}, \n        {id: 4, value: \"Normal\"} ]\n     }\n    async componentDidMount() {\n        // const {data: tasks} = await axios.get('/books');\n        // this.setState({tasks});\n    };\n    handleSubmit = async(e) => {\n        e.preventDefault();\n        console.log(this.state)\n        const {data: task} = await axios.post('/result', this.state.data);\n        console.log(task)\n    };\n    handleOnChange = ({currentTarget: input}) => {\n        const data = {...this.state.data}\n        data[input.name] = input.value;\n        this.setState({data})\n    };\n    render() { \n        const {data} = this.state;\n        return (\n        <div className = \"col my-2\"> \n        <h3>Expense Registeration Form</h3> \n        <form className=\"col\"  onSubmit={this.handleSubmit}>\n        <Row>\n            <Col className = \"col-4 my-2\">\n            <Card>\n            <Card.Header>Seller Information</Card.Header>\n            <Card.Body>\n            <InputRow type='input_group' id=\"seller_name\" title=\"Seller Name\" value={data.title} handleOnChange={this.handleOnChange} />\n            <InputRow type='input_group' id=\"tin\" title=\"TIN\" value={data.title} handleOnChange={this.handleOnChange} />\n            <InputRow type='input_group' id=\"phone\" title=\"Phone No\" value={data.title} handleOnChange={this.handleOnChange} />\n            <h3>Address</h3>\n            <Row>\n                <Col><InputRow type=\"text\" id=\"cost\" title=\"Region\" value={data.cost} handleOnChange={this.handleOnChange}/></Col>\n                <Col><InputRow type=\"text\" id=\"travel\" title=\"City\" value={data.travel} handleOnChange={this.handleOnChange}/></Col>\n            </Row>\n            <Row>\n                <Col><InputRow type=\"text\" id=\"engaged\" title=\"Sub City\" value={data.engaged} handleOnChange={this.handleOnChange}/></Col>\n                <Col><InputRow type=\"text\" id=\"waiting\" title=\"Woreda\" value={data.waiting} handleOnChange={this.handleOnChange}/></Col>\n                <Col><InputRow type=\"text\" id=\"waiting\" title=\"Kebele\" value={data.waiting} handleOnChange={this.handleOnChange}/></Col>\n            </Row>  \n            </Card.Body>\n            </Card>\n            </Col>\n\n            <Col className = \"col-8 my-2\">\n            <Card>\n            <Card.Header>Payment Detail</Card.Header>\n            <Card.Body>\n            <Row>\n                <Col><InputRow type=\"input_date\" id=\"travel\" title=\"Date\" value={data.travel} handleOnChange={this.handleOnChange}/></Col>\n                <Col><InputRow type=\"input_group\" id=\"cost\" title=\"Recipt No.\" value={data.cost} handleOnChange={this.handleOnChange}/></Col>\n            </Row>\n            <InputRow type='input_text' id=\"seller_name\" title=\"Reason for payment\" value={data.title} handleOnChange={this.handleOnChange} />\n            <br></br>\n            <InputRow type='selection' id=\"group\" title=\"Expense Category\" value={this.state.choices_01} handleOnChange={this.handleOnChange} />\n            </Card.Body>\n            </Card>\n            </Col>\n        </Row>\n            <br></br>\n            <Card> \n                <Card.Header>Estimated Time of Completion and Estimated Cost</Card.Header>\n                <Card.Body>\n                <Row>\n                    <Col><InputRow type=\"text\" id=\"cost\" title=\"Region\" value={data.cost} handleOnChange={this.handleOnChange}/></Col>\n                    <Col><InputRow type=\"text\" id=\"travel\" title=\"City\" value={data.travel} handleOnChange={this.handleOnChange}/></Col>\n                    <Col><InputRow type=\"text\" id=\"engaged\" title=\"Sub City\" value={data.engaged} handleOnChange={this.handleOnChange}/></Col>\n                    <Col><InputRow type=\"text\" id=\"waiting\" title=\"Woreda\" value={data.waiting} handleOnChange={this.handleOnChange}/></Col>\n                    <Col><InputRow type=\"text\" id=\"waiting\" title=\"Kebele\" value={data.waiting} handleOnChange={this.handleOnChange}/></Col>\n                </Row>  \n                \n                <InputRow type=\"textarea\" id=\"description\" title=\"Description\" value={data.description} handleOnChange={this.handleOnChange}/>\n                <Col className=\"col-4\"> \n                <InputRow type=\"file\" id=\"file_id\" value={data.file_id} handleOnChange={this.handleOnChange}/>\n                </Col>  \n                <InputRow type=\"date\" id=\"deadline\" title=\"Deadline\" value={data.deadline} handleOnChange={this.handleOnChange}/>\n                </Card.Body>\n            </Card>\n            <br></br>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n            </form>\n        </div> );\n    }\n}\n \nexport default Expenses;","import React, {Component} from 'react';\nimport PostComponent from './post'\nimport NewTask from './newTask'\nimport WorkStation from './workStation'\nimport Expenses from './financial_info'\nimport {HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Navbar,Nav,NavDropdown,Form,FormControl,Button } from 'react-bootstrap';\n\nclass NavigationComponent extends Component{\n    render(){\n        return(\n        <Router>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Navbar.Brand href=\"#home\">Activity Scheduling and Managment Tool</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/task_manager_client/home\">Home</Nav.Link>\n                        <Nav.Link href=\"/new_schedule\">New Schedule</Nav.Link>\n                        <Nav.Link href=\"/work_station\">Work Station</Nav.Link>\n                        <Nav.Link href=\"/expense\">Expense</Nav.Link>\n                        <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                            <NavDropdown.Divider />\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                        </NavDropdown>\n                    </Nav>\n                    <Form inline>\n                        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                        <Button variant=\"outline-success\">Search</Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n            <br />\n            <div>\n            <Switch>\n                <Route exact path=\"/task_manager_client/\" component={PostComponent}></Route>\n                <Route exact path=\"/task_manager_client/home\" component={PostComponent}></Route>\n                <Route path=\"/new_schedule\" component={NewTask}></Route>\n                <Route path=\"/work_station\" component={WorkStation}></Route>\n                <Route path=\"/expense\" component={Expenses}></Route>\n            </Switch>\n            </div>\n        </Router>\n        )  \n    }\n}\n\nexport default NavigationComponent;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport NavigationComponent from './components/navigationBar'\n// import PostComponent from './components/post'\n// import NewTask from './components/newTask'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport {HashRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <NavigationComponent/>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}